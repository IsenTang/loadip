version: 0.2

# phases:
#   install:
#     commands:
#       - npm install -g mocha
#   pre_build:
#     commands:
#       - npm install 
#       - mocha
phases:
  install:
    commands:
      - npm install -g mocha
      - npm install 
  pre_build:
    commands:
      - echo Test 
      - mocha
      - echo Logging in to Amazon ECR...
      - aws --version
      - $(aws ecr get-login --region us-east-1 --no-include-email)
      - REPOSITORY_URI=774061314809.dkr.ecr.us-east-1.amazonaws.com/loadbalance
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...          
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Writing image definitions file...
      - printf '[{"name":"loadtest","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json

     
artifacts:
  files:
    - bin/*
    - node_modules/**/*
    - public/**/*
    - routes/
    - test/*
    - views/*
    - .dockerignore
    - .gitignore
    - Dockerfile
    - package-lock.json
    - package.json
    - app.js
    - imagedefinitions.json

